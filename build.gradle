plugins {
    id 'base'
    id "architectury-plugin" version "3.4+"
    id "io.github.pacifistmc.forgix" version "1.2.6"
    id "dev.architectury.loom" version "1.2+" apply false
}


apply plugin: 'java'
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17


forgix {
    group = "net.pcal"
    mergedJarName = "${project.name}.jar"
    outputDir = "build/libs"
}

architectury {
    minecraft = project.minecraft_version
}

subprojects {

    repositories {
        // https://docs.gradle.org/current/userguide/declaring_repositories.html
        mavenCentral()
        maven { url 'https://maven.fabricmc.net/' }
        maven { url 'https://maven.nucleoid.xyz' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }

    apply plugin: "architectury-plugin"
    apply plugin: "dev.architectury.loom"

    dependencies {
        minecraft "com.mojang:minecraft:${project.minecraft_version}"
        mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    }

    java {
        withSourcesJar()
    }
}


apply plugin: "architectury-plugin"


tasks.register("createFinalJar", Zip) {
    def inputFile = file("build/libs/${project.name}.jar")
    from {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        [zipTree(inputFile)]
    }
    archiveFileName = "${project.name}-${project.version}.jar"
    destinationDirectory = inputFile.parentFile
}

tasks.register("removeForgixJar", Delete) {
    delete file("build/libs/${project.name}.jar")
}

/**
build.finalizedBy("mergeJars")
mergeJars.finalizedBy("createFinalJar")
createFinalJar.finalizedBy("removeForgixJar")
**/
